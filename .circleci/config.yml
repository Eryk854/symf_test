version: 2
jobs:
  build:
    docker:
      - image: circleci/php:7.4.6-apache-node-browsers-legacy
        environment:
          DATABASE_URL: mysql://user:pass@127.0.0.1:3306/test_db
      - image: circleci/mysql:5.7-ram
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_polish_ci
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
          
    steps:
      - checkout
      - run: sudo apt update
      - run: sudo composer self-update
      - run:
          name: Install dockerize and wait for database
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            dockerize -wait tcp://localhost:3306 -timeout 1m
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Install missing pdo_mysql
          command: |
            sudo docker-php-ext-install pdo_mysql
            sudo docker-php-ext-enable pdo_mysql
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run:
          name: Fill database
          command: |
            php bin/console make:migration
            php bin/console doctrine:migrations:migrate --no-interaction
            php bin/console doctrine:fixtures:load --no-interaction
      - run:
          name: Run phpunit
          command: php bin/phpunit
